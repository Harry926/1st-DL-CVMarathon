{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 練習時間\n",
    "#### 請寫一個函式用來計算 Mean Square Error\n",
    "$ MSE = \\frac{1}{n}\\sum_{i=1}^{n}{(Y_i - \\hat{Y}_i)^2} $\n",
    "\n",
    "### Hint: [如何取平方](https://googoodesign.gitbooks.io/-ezpython/unit-1.html)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# [作業目標]\n",
    "- 仿造範例的MAE函數, 自己寫一個MSE函數(參考上面公式)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# [作業重點]\n",
    "- 注意程式的縮排\n",
    "- 是否能將數學公式, 轉換為 Python 的函式組合? (In[2], Out[2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 載入基礎套件與代稱\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "def mean_absolute_error(y, yp):\n",
    "    \"\"\"\n",
    "    計算 MAE\n",
    "    Args:\n",
    "        - y: 實際值\n",
    "        - yp: 預測值\n",
    "    Return:\n",
    "        - mae: MAE\n",
    "    \"\"\"\n",
    "    mae = MAE = sum(abs(y - yp)) / len(y)\n",
    "    return mae\n",
    "\n",
    "# 定義 mean_squared_error 這個函數, 計算並傳回 MSE\n",
    "def mean_squared_error(y, yp):\n",
    "    \"\"\"\n",
    "    請完成這個 Function 後往下執行\n",
    "    \"\"\"\n",
    "    mse = sum((y-yp)**2) / len(y)\n",
    "    return mse"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 與範例相同, 不另外解說\n",
    "w = 3\n",
    "b = 0.5\n",
    "x_lin = np.linspace(0, 100, 101)\n",
    "y = (x_lin + np.random.randn(101) * 5) * w + b\n",
    "\n",
    "plt.plot(x_lin, y, 'b.', label = 'data points')\n",
    "plt.title(\"Assume we have data points\")\n",
    "plt.legend(loc = 2)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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2qZP5KdjtShVCipVsl2gpKYWXW7dHw3uSikVjJ074b774D//gbp14Z13qNSxIy85LWkqVYIhQ3JfeB0+PHLF1Zx7ETr11FMB2L59O126dAm47MSJE3N1NNaxY0d+++23sJZPqXjns/PB48dh+nQ491yYPx8efNA2d+zYEbC18uHD7f1K+c2zh3PQD625F9Lx48dJTEzM1zrVq1fntddeC7jMxIkTufXWWznllFMAePfddwtcRqViXb7aoQfYhrvJ48SJUGLNV3Rd1o9y67+EDh3gueegfn2f6+c3zx7uQT+05h7Ali1bqF+/Pj179qRp06Z06dKFQ4cOkZyczCOPPMJFF13EwoUL2bx5M1dddRXnnXce7dq147vvvgPgp59+IiUlhfPPP5+RI0fm2m7jxo0B++Vw33330aRJE5o2bcqzzz7L5MmT2b59Ox06dKBDhw4AJCcns3v3bgDGjx9P48aNady4MRMnTjyxzQYNGtC7d28aNWrEFVdcwZ9//lmUb5dSEeG3S9081vGuMbubPJY+/DtH+g2i59TzObT+Z34Y9bKNvn4CO+S/C5RwD/pRPGruQ4bA6tWh3Wbz5varOQ8bN25k1qxZXHjhhfzf//0fzz33HABJSUl89tlnAFx66aVMnz6devXqsXLlSvr378/HH3/M4MGD6devHz169GDq1Kk+tz9jxgx++uknvv76a0qUKMHevXupWLEi48ePZ9myZVSuXDnX8qtWreLFF19k5cqVGGNo06YNF198Maeddho//PAD8+bNY+bMmdx00028/vrr3HrrrYV8o5SKbsG0VXfzV2NOTYVSJQ3X57zKM+ZuqppfmUY/Hk4Yw32lKzA8iFEp8tOGPdwtarTmnodatWpx4YUXAnDrrbeeCOg333wzAH/88QcrVqyga9euNG/enLvuuousrCwAPv/8c7p37w7Abbfd5nP7H330EX379qVECfs9W7FixYDl+eyzz+jcuTNly5bl1FNP5YYbbmD58uUA1K1bl+bNmwNw3nnnsWXLlkIcuVLFQ357hPVXY06p9D3bm1zBK6Y7JWrXoH3pLxmcOJU/S1cIS1PGcHR26FY8au5B1LDDxbvLX8/rsmXLApCTk0OFChVY7eeXRV6DUBlj8lzGe3l/Sru6D01MTNS0jIoL+b2l37vG3CHlMIwaC088QYWkJJgyhSp9+zLuy8Sw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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 與範例相同, 不另外解說\n",
    "y_hat = x_lin * w + b\n",
    "plt.plot(x_lin, y, 'b.', label = 'data')\n",
    "plt.plot(x_lin, y_hat, 'r-', label = 'prediction')\n",
    "plt.title(\"Assume we have data points (And the prediction)\")\n",
    "plt.legend(loc = 2)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Mean squared error is 216.498\n",
      "The Mean absolute error is 11.459\n"
     ]
    }
   ],
   "source": [
    "# 執行 Function, 確認有沒有正常執行\n",
    "MSE = mean_squared_error(y, y_hat)\n",
    "MAE = mean_absolute_error(y, y_hat)\n",
    "print(\"The Mean squared error is %.3f\" % (MSE))\n",
    "print(\"The Mean absolute error is %.3f\" % (MAE))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# [作業2]\n",
    "\n",
    "請上 Kaggle, 在 Competitions 或 Dataset 中找一組競賽或資料並寫下：\n",
    "\n",
    "1. 你選的這組資料為何重要\n",
    "\n",
    "2. 資料從何而來 (tips: 譬如提供者是誰、以什麼方式蒐集)\n",
    "\n",
    "3. 蒐集而來的資料型態為何\n",
    "\n",
    "4. 這組資料想解決的問題如何評估\n",
    "\n",
    "# [作業3]\n",
    "\n",
    "想像你經營一個自由載客車隊，你希望能透過數據分析以提升業績，請你思考並描述你如何規劃整體的分析/解決方案：\n",
    "\n",
    "1. 核心問題為何 (tips：如何定義 「提升業績 & 你的假設」)\n",
    "\n",
    "2. 資料從何而來 (tips：哪些資料可能會對你想問的問題產生影響 & 資料如何蒐集)\n",
    "\n",
    "3. 蒐集而來的資料型態為何\n",
    "\n",
    "4. 你要回答的問題，其如何評估 (tips：你的假設如何驗證)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "作業2\n",
    "\n",
    "League of Legends Diamond Ranked Games (10 min)\n",
    "\n",
    "https://www.kaggle.com/bobbyscience/league-of-legends-diamond-ranked-games-10-min\n",
    "\n",
    "1.好玩\n",
    "\n",
    "2.kaggle 數據集包含前10分鐘。大約統計從高ELO(鑽石I到大師)的積分對戰(rp)\n",
    "\n",
    "3.dataframe\n",
    "\n",
    "4.邏輯回歸(贏或輸)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "作業3\n",
    "\n",
    "1.增加載客率 讓司機知道哪裡有大量的載客需求\n",
    "\n",
    "2.天氣 假期 節慶 意外  乘客歷史紀錄\n",
    "\n",
    "3.區域(天氣 假期 節慶 意外) 計算熱點(label)\n",
    "\n",
    "4."
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
